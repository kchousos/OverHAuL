[project]
name = "llm-harness"
version = "1.0.0"
description = "LLM-generated harnesses for your C/C++ project."
authors = [{ name = "Konstantinos Chousos", email = "kon.chousos@gmail.com" }]
requires-python = ">=3.10,<3.13"
readme = "README.md"
license = "GPL-3.0"
license-files = ["LICENCSE*"]
dependencies = [
    "dspy (>=2.6.17,<3.0.0)",
    "argparse (>=1.4.0,<2.0.0)",
    "loguru (>=0.7.3,<0.8.0)",
    "flawfinder>=2.0.19",
]

[project.scripts]
llm-harness = "llm_harness.cli:main"

[dependency-groups]
docs = ["pdoc>=15.0.2,<16"]
dev = [
    "pytest>=8.3.5,<9",
    "pytest-cov>=6.1.1,<7",
    "ruff>=0.11.6,<0.12",
    "pre-commit>=4.2.0,<5",
    "mypy>=1.15.0",
    "basedpyright>=1.29.2",
]

[tool.uv]
default-groups = ["docs", "dev"]

[[tool.mypy.overrides]]
module = "dspy.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "llm_harness.*"
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_reexport = true
strict_equality = true
strict_optional = true
warn_return_any = true
warn_unused_ignores = true

[tool.hatch.build.targets.sdist]
include = ["src/llm_harness"]

[tool.hatch.build.targets.wheel]
include = ["src/llm_harness"]

[tool.hatch.build.targets.wheel.sources]
"src" = ""

[tool.hatch.build.targets.wheel.shared-data]
"llm_harness/py.typed" = "llm_harness/py.typed"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]
filterwarnings = ["ignore::DeprecationWarning"]

[tool.ruff]
line-length = 79
[tool.ruff.pydocstyle]
convention = "google"

[tool.basedpyright]
reportUnusedCallResult = "none"
reportAny = "none"
reportMissingTypeStubs = "none"
reportUnknownMemberType = "none"