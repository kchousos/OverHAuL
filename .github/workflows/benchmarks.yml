name: Benchmark

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  benchmark:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"

    - name: Install dependencies
      run: uv sync

    - name: Install dependencies using uv
      run: uv pip install .

    - name: Run benchmark
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        chmod +x ./benchmarks/benchmark.sh
        uv run ./benchmarks/benchmark.sh -m gpt-4

    - name: Find benchmark directory name
      id: finddir
      run: |
        DIR=$(find benchmark_results -mindepth 1 -maxdepth 1 -type d | head -n 1)
        BASENAME=$(basename "$DIR")
        mv "$DIR" "./$BASENAME"
        echo "artifact_name=$BASENAME" >> "$GITHUB_OUTPUT"

    - name: Print benchmark's results
      run: |
        cat ${{ steps.finddir.outputs.artifact_name }}/results.log

    - name: Print benchmark results in summary
      run: |
        echo '## 📊 Benchmark Results Summary' >> $GITHUB_STEP_SUMMARY
        echo '' >> $GITHUB_STEP_SUMMARY
        echo '| Time | Status | Project | Message |' >> $GITHUB_STEP_SUMMARY
        echo '|------|--------|---------|---------|' >> $GITHUB_STEP_SUMMARY

        awk '
          /^[0-9]{4}-[0-9]{2}-[0-9]{2}/ {
            time = $1 " " $2
            match($0, /\[(INFO|ERROR|SUCCESS|WARN)\]/, m)
            status = m[1]
            emoji = (status == "SUCCESS" ? "✅" : (status == "ERROR" ? "❌" : (status == "WARN" ? "⚠️" : "ℹ️")))
            sub(/^.*\] /, "", $0)
            split($0, parts, ": ")
            project = parts[1]
            message = parts[2]
            gsub(/\|/, "\\\\|", project)
            gsub(/\|/, "\\\\|", message)
            printf("| %s | %s %s | %s | %s |\n", time, emoji, status, project, message)
          }
        ' "${{ steps.finddir.outputs.artifact_name }}/results.log" >> $GITHUB_STEP_SUMMARY

    - name: Upload benchmark artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.finddir.outputs.artifact_name }}
        path: ${{ steps.finddir.outputs.artifact_name }}
