name: Benchmark

on:
  push:
    branches:
      - master

jobs:
  benchmark:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install LLVM and Clang
      run: |
        sudo apt-get update
        # Remove any existing LLVM installations
        sudo apt-get remove -y llvm* clang* || true
        
        # Install specific LLVM version (14 is known to work well)
        sudo apt-get install -y llvm-14 clang-14 libclang-14-dev
        
        # Create symlinks for default commands
        sudo ln -sf /usr/bin/llvm-config-14 /usr/bin/llvm-config
        sudo ln -sf /usr/bin/clang-14 /usr/bin/clang

    - name: Set environment variables for libclang
      run: |
        echo "LIBCLANG_PATH=$(llvm-config --libdir)" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=$(llvm-config --libdir):$LD_LIBRARY_PATH" >> $GITHUB_ENV

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"

    - name: Install dependencies
      run: uv sync

    - name: Install dependencies using uv
      run: uv pip install .

    - name: Run benchmark
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        chmod +x ./benchmarks/benchmark.sh
        uv run ./benchmarks/benchmark.sh

    - name: Find benchmark directory name
      id: finddir
      run: |
        DIR=$(find benchmark_results -mindepth 1 -maxdepth 1 -type d | head -n 1)
        BASENAME=$(basename "$DIR")
        mv "$DIR" "./$BASENAME"
        echo "artifact_name=$BASENAME" >> "$GITHUB_OUTPUT"

    - name: Print benchmark's results
      run: |
        cat ${{ steps.finddir.outputs.artifact_name }}/results.log

    - name: Upload benchmark artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.finddir.outputs.artifact_name }}
        path: ${{ steps.finddir.outputs.artifact_name }}
